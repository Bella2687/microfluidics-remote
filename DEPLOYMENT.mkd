% Deploying the controller
% 10 August 2011
% Douglas Watson

I'm still figuring out how exactly to deploy the application. For the moment, the sensible choice seems to be hooking up the web application to an Apache server, and on the other side running both the RPyC name server and the Serial Driver as deamons (launched on startup).

Web application
===============

The first step is be to package it up as a python package, so that it can be installed in a vitualenv, and imported in a separate python script as:
	
	from mywebapp import app as application

This is required to make a wsgi application.

Web server
----------

The simplest production web server is to CherryPy's server, adapting it for Flask. I've created a `cherrypy.conf` file in the web/ directory, that allows starting a web server with the command:
	
	cherryd -c cherrypy.conf -i request_handler

I still need to write an init.d script for it, and make it run as a daemon, but that's good enough for the moment.

That's the easiest way I have found of running a Flask app on a CherryPy server. Easier than my previous attempt at writing a CherryPy program that imports the app and starts the server (as in `cherrypy_server.py`).

Driver and registry server
==========================

Look into init.d scripts.
